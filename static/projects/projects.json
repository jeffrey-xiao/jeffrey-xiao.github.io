[
  {
    "title": "Circuit Buddy",
    "src": "/projects/circuit-buddy.png",
    "url": "https://devpost.com/software/circuit-analysis",
    "description": "<span class='emphasis'>Interactive circuit builder</span> that has an auto-updating truth table and a simple drag-and-drop interface. It also supports multiple tabls, importing and exporting circuits with JSON, circuit simplification, and custom components. Built with <span class='emphasis'>FabricJS</span>,and <span class='emphasis'>Vue.js</span>."
  },
  {
    "title": "Emergicare",
    "src": "/projects/emergicare.png",
    "url": "https://devpost.com/software/emergicare-hsup49",
    "description": "<span class='emphasis'>Android background service</span> that sends optimized GPS and network locations by text to a specified number every time 911 is called. The companion operator dashboard supports routing of emergency vehicles simulated by the Waterloo bus system. Built with <span class='emphasis'>Android</span>, <span class='emphasis'>Twilio</span>, <span class='emphasis'>Node</span>, <span class='emphasis'>React</span>, and <span class='emphasis'>Firebase</span>."
  },
  {
    "title": "React Chess",
    "src": "/projects/react-chess.png",
    "url": "https://github.com/jeffrey-xiao/react-chess",
    "description": "<span class='emphasis'>Chess clone</span> developed with <span class='emphasis'>Node</span>, <span class='emphasis'>Express</span>, <span class='emphasis'>React</span>, and <span class='emphasis'>Socket</span>. Supports room creation, different game modes (Bughouse, Crazyhouse, Regular), timer, a chatroom, and a history of moves."
  },
  {
    "title": "Intelligario",
    "src": "/projects/intelligario.png",
    "url": "http://devpost.com/software/intelligario",
    "description": "<span class='emphasis'>Agar.io clone</span> that allows for human input through the live adjustment of an \"aggression\" factor. Spikes will automatically kill any blob. Communication is done through <span class='emphasis'>Socket</span> and the graphics is done through <span class='emphasis'>FabricJS</span>. The underlying implementation of the search algorithm is an <span class='emphasis'>optimized, multithreated Dijkstra's algorithm</span>."
  },
  {
    "title": "React Reddit",
    "src": "/projects/react-reddit.png",
    "url": "https://github.com/jeffrey-xiao/react-reddit",
    "description": "<span class='emphasis'>Reddit clone</span> developed with <span class='emphasis'>Node</span>, <span class='emphasis'>Express</span>, <span class='emphasis'>Firebase</span>, and <span class='emphasis'>React</span>. The features include self-posting, linked posts, voting, account management, and live post and commrent creation. The styling is very minimal."
  },
  {
    "title": "MAL Recommender",
    "src": "/projects/mal-recommender.png",
    "url": "https://github.com/jeffrey-xiao/mal-recommender",
    "description": "<span class='emphasis'>Python</span> application that uses <span class='emphasis'>collaborative filtering</span> to predict scores for MyAnimeList users. Computes 1000 features and weights for both users and anime. Since MAL did not have a developed API, user and anime data were crawled using BeautifulSoup. Machine learning framework is <span class='emphasis'>NumPy</span> and <span class='emphasis'>SciPy</span>."
  },
  {
    "title": "Snatch N' Go",
    "src": "/projects/snatch-n-go.png",
    "url": "http://devpost.com/software/snatchngo",
    "description": "<span class='emphasis'>Android</span> application for customers and <span class='emphasis'>web</span> application for restaurant managers that faciliate easy <span class='emphasis'>food ordering</span> and <span class='emphasis'>pick-ups</span>. The web app essentially serves as a work-flow tool to track and manage placed orders, while the Android app is a clean interface to find and order from nearby restaurants. Built with <span class='emphasis'>Firebase</span> and <span class='emphasis'>Twilio</span>."
  },
  {
    "title": "SwagMusic.js",
    "src": "/projects/swag-music.png",
    "url": "https://github.com/xelendt/swagmusic.js",
    "description": "<span class='emphasis'>3D model</span> that <span class='emphasis'>dances</span> to the beat of any music. Built with <span class='emphasis'>WebGL</span>, <span class='emphasis'>three.js</span>, <span class='emphasis'>Web Audio API</span>, and <span class='emphasis'>Twilio</span>. It currently can take the \"url\" of any <span class='emphasis'>Soundcloud</span> link, but integration with other music sharing sites like <span class='emphasis'>Spotify</span> is doable."
  },
  {
    "title": "In the Loop",
    "src": "/projects/in-the-loop.jpg",
    "url": "http://devpost.com/software/in-the-loop-real-time-news-aggregating-web-app",
    "description": "<span class='emphasis'>AngularJS</span> application and <span class='emphasis'>Python</span> backend that <span class='emphasis'>aggregates current news information</span> in live time. Built with <span class='emphasis'>Twitter API</span>, <span class='emphasis'>Bing Search API</span>, <span class='emphasis'>Newspaper</span>, <span class='emphasis'>Firebase</span>, <span class='emphasis'>Indico</span>, <span class='emphasis'>Google Places</span>, and <span class='emphasis'>Wolfram Alpha</span>. It also uses a <span class='emphasis'>custom matching algorithm</span> to select the best paragraphs."
  },
  {
    "title": "WhizBridge",
    "src": "/projects/whiz-bridge.jpg",
    "url": "http://devpost.com/software/whizbridge-yrfq5g",
    "description": "<span class='emphasis'>Web</span> and <span class='emphasis'>iOS</span> application that provides a <span class='emphasis'>buyer-oriented marketplace</span> for tech support. The job posting process is accountless, secure, and convenient, and each job is associated with a temporary hash. Built with <span class='emphasis'>Twilio</span> and <span class='emphasis'>BrainTree</span>."
  },
  {
    "title": "Resistora",
    "src": "/projects/resistora.png",
    "url": "http://devpost.com/software/resistora",
    "description": "<span class='emphasis'>Android</span> application that determines the <span class='emphasis'>resistance</span> of various resistors using the camera. It uses a <span class='emphasis'>custom image analysis algorithm</span> based on the <span class='emphasis'>saturation</span> and <span class='emphasis'>lightness</span> of each vertical strip when the image is converted to HSL."
  },
  {
    "title": "Competitive Programming",
    "src": "/projects/competitive-programming.png",
    "url": "https://github.com/jeffrey-xiao/Competitive-Programming",
    "description": "Repository containing all my competitive programming work. The <span class='emphasis'>codebook</span> package stores useful <span class='emphasis'>algorithms</span> and <span class='emphasis'>data structures</span>, and the <span class='emphasis'>contest</span> package stores my <span class='emphasis'>solutions</span>."
  },
  {
    "title": "Five Hundred Miles for Parkison's",
    "src": "/projects/five-hundred-miles.png",
    "url": "http://fivehundredmiles.org/",
    "description": "Developed stable <span class='emphasis'>AngularJS</span> website for <span class='emphasis'>Five Hundred Miles for Parkison's</span>."
  },
  {
    "title": "Gravity Collision Simulator",
    "src": "/projects/gravity-simulator.png",
    "url": "https://github.com/jeffrey-xiao/Gravity-Collision-Simulator",
    "description": "<span class='emphasis'>java.swing application</span> that emulates <span class='emphasis'>two dimensional collisions</span>. The coefficient of resistitution, frames per second, the accleration of gravity, and the path size are all adjustable. Upon creation, ball overlap is automatically detected and adjusted."
  },
  {
    "title": "Single Player Tetris",
    "src": "/projects/tetris-single.png",
    "url": "https://github.com/jeffrey-xiao/Tetris-Single-Player",
    "description": "<span class='emphasis'>java.awt</span> clone of <span class='emphasis'>single player Tetris</span>. Mechanics are ones you would typically find in a modern Tetris clone."
  },
  {
    "title": "Multiplayer Tetris",
    "src": "/projects/tetris-multi.png",
    "url": "https://github.com/jeffrey-xiao/Tetris-Multiplayer",
    "description": "<span class='emphasis'>java.awt</span> clone of <span class='emphasis'>local multiplayer Tetris</span>. Mechanics are ones you would typically find in a modern Tetris clone. Combos are factored into account when sending garbage lines."
  },
  {
    "title": "Genetic Programming Reversi",
    "src": "/projects/reversi.png",
    "url": "https://github.com/jeffrey-xiao/Genetic-Reversi",
    "description": "<span class='emphasis'>Java</span> application that uses <span class='emphasis'>genetic programming</span> to create artificial intelligence to play <span class='emphasis'>Reversi</span>. Each genetic player uses the symmetry of the board to evaluate moves. It plays relatively well against random players and 2-3 look greedy players."
  }
]
