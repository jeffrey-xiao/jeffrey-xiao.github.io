{"version":3,"sources":["webpack:///./src/components/section.js","webpack:///./src/components/sectionHeader.js","webpack:///./src/components/archive.js","webpack:///./src/components/pagination.js","webpack:///./src/components/unbrokenStyledLink.js","webpack:///./src/components/postList.js","webpack:///./src/components/recentList.js","webpack:///./src/components/tagList.js","webpack:///./src/templates/blog.js","webpack:///./src/components/styledLink.js","webpack:///./src/components/clear.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_string-html.js","webpack:///./src/components/tagLink.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.link.js"],"names":["styled","div","colors","shade1","h2","base1","months","ArchiveLinkWrapper","ArchiveLink","StyledLink","NestedIcon","FontAwesomeIcon","NestedLabel","span","NestedLabelWrapper","props","filterType","NestedLinkWrapper","filterValue","active","NestedLink","toggleActive","bind","state","this","setState","prevState","render","elements","push","key","onClick","icon","posts","length","buckets","Map","forEach","post","postDate","Date","node","frontmatter","date_created","filterTarget","getFullYear","getMonth","has","set","get","Array","from","entries","value","String","path","to","title","React","Component","Archive","style","textAlign","PaginationLink","children","accent1","base4","NewerPostsLink","OlderPostsLink","LargeLinkLabel","SmallLinkLabel","PaginationLabel","PaginationDiv","Pagination","pathPrefix","page","numOfPages","Link","PostTitle","PostSubtitle","h4","base3","PostTagLinks","PostDescription","base2","PostCard","description","componentDidMount","document","doc","createElement","innerHTML","html","paragraphs","getElementsByTagName","i","words","textContent","trim","split","slice","Math","min","join","replace","forceUpdate","tagLinks","tags","tag","toLowerCase","formattedDate","toLocaleDateString","weekday","year","month","day","link","PostList","tagFilter","indexOf","RecentLinksList","ul","RecentList","recentLinks","TagBody","TagSection","Section","TagLink","UnbrokenStyledLink","TagList","tagCount","BlogBody","BlogLeftColumn","BlogRightColumn","TagListTitle","h1","BlogPage","opacity","window","requestAnimationFrame","transition","tokens","pageContext","data","pagePosts","edges","allPosts","ref","Helmet","match","pageQuery","Clear","$export","fails","defined","quot","createHTML","string","attribute","S","p1","module","exports","NAME","exec","O","P","F","test","accent3","url"],"mappings":"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","file":"component---src-templates-blog-js-67bcb2d76e0e23c149c7.js","sourcesContent":["import styled from \"styled-components\";\n\nimport colors from \"../utils/colors\";\n\nexport default styled.div`\n  margin: 0 10px 50px 10px;\n  border: 0.1px solid ${colors.shade1()};\n  border-radius: 7px;\n  box-shadow: inset 0 0 0 1px ${colors.shade1()}, 0 5px 15px -5px rgba(0, 0, 0, 0.1);\n  padding: 50px;\n\n  @media only screen and (max-width: 64em) {\n    padding: 40px;\n  }\n\n  @media only screen and (max-width: 60em) {\n    padding: 30px;\n  }\n\n  @media only screen and (max-width: 48em) {\n    padding: 50px;\n  }\n\n  @media only screen and (max-width: 40em) {\n    padding: 40px;\n  }\n\n  @media only screen and (max-width: 32em) {\n    padding: 30px;\n    margin: 0 0 50px 0;\n  }\n`;\n","import styled from \"styled-components\";\n\nimport colors from \"../utils/colors\";\n\nexport default styled.h2`\n  display: table;\n  margin: 0px auto 10px auto;\n  padding: 0px 15px 10px 15px;\n  border-bottom: 2px solid ${colors.base1()};\n  color: ${colors.base1()};\n  text-transform: uppercase;\n`;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport Section from \"./section\";\nimport SectionHeader from \"./sectionHeader\";\nimport StyledLink from \"./styledLink\";\nimport colors from \"../utils/colors\";\n\nconst months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nconst ArchiveLinkWrapper = styled.div`\n  padding: 0 0 8px 15px;\n`;\n\nconst ArchiveLink = styled(StyledLink)`\n  display: inline;\n  line-height: 15px;\n  z-index: 0;\n`;\n\nconst NestedIcon = styled(FontAwesomeIcon)`\n  font-size: 0.5em;\n  position: absolute;\n  top: 9px;\n  left: -5px;\n  color: ${colors.base1()};\n`;\n\nconst NestedLabel = styled.span`\n  padding-left: 5px;\n`;\n\nconst NestedLabelWrapper = styled.div`\n  cursor: pointer;\n  padding-top: ${(props) => (props.filterType === \"month\" ? \"10px\" : \"5px\")};\n  opacity: 1 !important;\n  height: auto !important;\n  display: block;\n  position: relative;\n  font-family: \"Josefin Sans\", sans-serif;\n  z-index: ${(props) => (props.filterType === \"month\" ? 3 : 1)} !important;\n  color: ${colors.base1()};\n`;\n\nconst NestedLinkWrapper = styled.div`\n  padding-left: ${(props) => (props.filterValue ? 15 : 0)}px;\n  overflow: hidden;\n  min-height: ${(props) => (props.filterType === \"month\" ? 30 : 0)}px;\n  & > div {\n    opacity: ${(props) => (props.active ? 1 : 0)};\n    height: ${(props) => (props.active ? \"auto\" : 0)};\n    z-index: ${(props) => (props.active ? \"auto\" : -1)};\n  }\n`;\n\nclass NestedLink extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n    this.state = { active: !this.props.filterValue && this.props.active };\n  }\n\n  toggleActive() {\n    this.setState((prevState) => ({ active: !prevState.active }));\n  }\n\n  render() {\n    const elements = [];\n\n    if (this.props.filterValue) {\n      elements.push(\n        <NestedLabelWrapper\n          key={this.props.filterValue}\n          onClick={this.toggleActive}\n          filterValue={this.props.filterValue}\n        >\n          <NestedIcon icon={this.state.active ? \"minus\" : \"plus\"} />\n          <NestedLabel>{`${this.props.filterValue} (${this.props.posts.length})`}</NestedLabel>\n        </NestedLabelWrapper>,\n      );\n    }\n\n    if (this.props.filterType) {\n      const buckets = new Map();\n      this.props.posts.forEach((post) => {\n        const postDate = new Date(post.node.frontmatter.date_created);\n\n        // filterType should be '', 'year', or 'month'\n        const isYear = this.props.filterType === \"year\";\n        const filterTarget = isYear ? postDate.getFullYear() : postDate.getMonth();\n\n        if (!buckets.has(filterTarget)) {\n          buckets.set(filterTarget, []);\n        }\n        buckets.get(filterTarget).push(post);\n      });\n\n      Array.from(buckets.entries()).forEach(([key, value]) => {\n        elements.push(\n          <NestedLink\n            key={key}\n            active={this.state.active}\n            posts={value}\n            filterType={this.props.filterType === \"year\" ? \"month\" : \"\"}\n            filterValue={this.props.filterType === \"year\" ? String(key) : months[key]}\n          />,\n        );\n      });\n    } else {\n      this.props.posts.forEach((post) => {\n        elements.push(\n          <div key={post.node.frontmatter.path}>\n            <ArchiveLinkWrapper>\n              <ArchiveLink key={post.node.frontmatter.path} to={post.node.frontmatter.path}>\n                {post.node.frontmatter.title}\n              </ArchiveLink>\n            </ArchiveLinkWrapper>\n          </div>,\n        );\n      });\n    }\n\n    return (\n      <NestedLinkWrapper\n        active={this.state.active}\n        filterType={this.props.filterType}\n        filterValue={this.props.filterValue}\n      >\n        {elements}\n      </NestedLinkWrapper>\n    );\n  }\n}\n\nNestedLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  filterType: PropTypes.oneOf([\"year\", \"month\", \"\"]).isRequired,\n  filterValue: PropTypes.string.isRequired,\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst Archive = (props) => (\n  <Section style={{ textAlign: \"center\" }}>\n    <SectionHeader>Archive</SectionHeader>\n    <NestedLink active posts={props.posts} filterType=\"year\" filterValue=\"\" />\n  </Section>\n);\n\nArchive.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Archive;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport Link from \"./link\";\nimport Clear from \"./clear\";\nimport colors from \"../utils/colors\";\n\nconst PaginationLink = styled(({ active, children, ...props }) => (\n  <Link {...props}>{children}</Link>\n))`\n  display: inline-block;\n  font-size: 20px;\n  pointer-events: ${(props) => (props.active ? \"auto\" : \"none\")};\n  cursor: ${(props) => (props.active ? \"pointer\" : \"default\")};\n  color: ${(props) => (props.active ? colors.accent1() : colors.base4())};\n  text-decoration: none;\n  font-family: \"Josefin Sans\", sans-serif;\n  text-transform: uppercase;\n  transition: all 0.5s;\n\n  &:hover {\n    background-color: ${colors.accent1(0.1)};\n  }\n\n  @media only screen and (max-width: 32em) {\n    font-size: 16px;\n  }\n`;\n\nconst NewerPostsLink = styled(PaginationLink)`\n  float: left;\n`;\n\nconst OlderPostsLink = styled(PaginationLink)`\n  float: right;\n`;\n\nconst LargeLinkLabel = styled.span`\n  display: inline;\n  @media only screen and (max-width: 32em) {\n    display: none;\n  }\n`;\n\nconst SmallLinkLabel = styled.span`\n  display: none;\n  @media only screen and (max-width: 32em) {\n    display: inline;\n  }\n`;\n\nconst PaginationLabel = styled.div`\n  display: inline-block;\n  margin: 0 auto;\n  font-size: 27px;\n  font-family: \"Josefin Sans\", sans-serif;\n  color: ${colors.accent1()};\n\n  @media only screen and (max-width: 32em) {\n    font-size: 22px;\n  }\n`;\n\nconst PaginationDiv = styled.div`\n  padding: 0 20px;\n  text-align: center !important;\n`;\n\nconst Pagination = (props) => (\n  <PaginationDiv>\n    <NewerPostsLink to={`${props.pathPrefix}/${props.page - 1}`} active={props.page !== 1}>\n      <LargeLinkLabel>\n        <FontAwesomeIcon icon=\"angle-left\" />\n        &nbsp;Newer Posts\n      </LargeLinkLabel>\n      <SmallLinkLabel>\n        <FontAwesomeIcon icon=\"angle-left\" />\n        &nbsp;Newer\n      </SmallLinkLabel>\n    </NewerPostsLink>\n    <OlderPostsLink\n      to={`${props.pathPrefix}/${props.page + 1}`}\n      active={props.page !== props.numOfPages}\n    >\n      <LargeLinkLabel>\n        Older Posts&nbsp;\n        <FontAwesomeIcon icon=\"angle-right\" />\n      </LargeLinkLabel>\n      <SmallLinkLabel>\n        Older&nbsp;\n        <FontAwesomeIcon icon=\"angle-right\" />\n      </SmallLinkLabel>\n    </OlderPostsLink>\n    <PaginationLabel>{`${props.page}/${props.numOfPages}`}</PaginationLabel>\n    <Clear />\n  </PaginationDiv>\n);\n\nPagination.propTypes = {\n  pathPrefix: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n  numOfPages: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","import styled from \"styled-components\";\n\nimport Link from \"./link\";\nimport colors from \"../utils/colors\";\n\nexport default styled(Link)`\n  text-decoration: none;\n  border-bottom: solid 2px ${colors.shade1()};\n  color: ${colors.accent1()};\n  &:hover {\n    background-color: ${colors.accent1(0.1)};\n    border-bottom: solid 2px ${colors.accent1()};\n  }\n  padding-right: 2px;\n  transition: all 0.5s;\n  display: inline-block;\n  white-space: nowrap;\n  font-family: \"Josefin Sans\", sans-serif;\n  font-size: 17px;\n`;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport Link from \"./link\";\nimport Section from \"./section\";\nimport TagLink from \"./tagLink\";\nimport UnbrokenStyledLink from \"./unbrokenStyledLink\";\nimport colors from \"../utils/colors\";\n\nconst PostTitle = styled.h2`\n  margin-top: 5px;\n  margin-bottom: 5px;\n  color: ${colors.base1()};\n  text-transform: uppercase;\n`;\n\nconst PostSubtitle = styled.h4`\n  margin-top: 0px;\n  margin-bottom: 5px;\n  color: ${colors.base3()};\n  font-weight: normal;\n  text-transform: uppercase;\n`;\n\nconst PostTagLinks = styled.div`\n  margin-top: 15px;\n`;\n\nconst PostDescription = styled.div`\n  color: ${colors.base2()};\n  font-family: \"Open Sans\", sans-serif;\n  margin-bottom: 5px;\n`;\n\nclass PostCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.description = \"\";\n  }\n\n  componentDidMount() {\n    let description = \"\";\n    if (document) {\n      const doc = document.createElement(\"html\");\n      doc.innerHTML = this.props.html;\n      const paragraphs = doc.getElementsByTagName(\"p\");\n\n      for (let i = 0; description.length === 0 && i < paragraphs.length; i += 1) {\n        const intro = paragraphs[i].textContent.trim();\n        const words = intro.split(\" \");\n        description = words.slice(0, Math.min(words.length, 50)).join(\" \");\n      }\n      this.description = `${description.replace(/[^A-Za-z0-9]$/g, \"\")}…`;\n      this.forceUpdate();\n    }\n  }\n\n  render() {\n    const tagLinks = [];\n\n    this.props.tags.forEach((tag) => {\n      tagLinks.push(\n        <TagLink key={tag}>\n          <Link to={`/blog/tags/${tag.toLowerCase().replace(/ /g, \"-\")}`}>{tag}</Link>\n        </TagLink>,\n      );\n    });\n\n    const dateOptions = {\n      weekday: \"short\",\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n    };\n    const formattedDate = new Date(this.props.date_created).toLocaleDateString(\n      \"en-US\",\n      dateOptions,\n    );\n\n    return (\n      <Section>\n        <PostTitle>{this.props.title}</PostTitle>\n        <PostSubtitle>{formattedDate}</PostSubtitle>\n        <PostDescription>{this.description}</PostDescription>\n        <UnbrokenStyledLink to={this.props.link}>Read More</UnbrokenStyledLink>\n        <PostTagLinks>{tagLinks}</PostTagLinks>\n      </Section>\n    );\n  }\n}\n\nPostCard.propTypes = {\n  date_created: PropTypes.string.isRequired,\n  html: PropTypes.string.isRequired,\n  link: PropTypes.string.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nconst PostList = (props) => {\n  const posts = [];\n  const tag = props.tagFilter;\n\n  props.posts.forEach((post) => {\n    const {\n      node: {\n        frontmatter: { tags },\n      },\n    } = post;\n\n    if (props.tagFilter === \"\" || tags.indexOf(tag) !== -1) {\n      posts.push(\n        <PostCard\n          key={post.node.frontmatter.path}\n          link={post.node.frontmatter.path}\n          title={post.node.frontmatter.title}\n          tags={post.node.frontmatter.tags}\n          date_created={post.node.frontmatter.date_created}\n          html={post.node.html}\n        />,\n      );\n    }\n  });\n\n  return <div>{posts}</div>;\n};\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  tagFilter: PropTypes.string.isRequired,\n};\n\nexport default PostList;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport Section from \"./section\";\nimport SectionHeader from \"./sectionHeader\";\nimport StyledLink from \"./styledLink\";\n\nconst RecentLinksList = styled.ul`\n  margin: 0 auto;\n  font-family: \"Open Sans\", sans-serif;\n  list-style-type: none;\n  text-align: left;\n\n  li:before {\n    content: \"–\";\n    position: absolute;\n    margin-left: -18px;\n  }\n\n  width: 100%;\n\n  @media only screen and (max-width: 64em) {\n    width: 80%;\n  }\n`;\n\nconst RecentList = (props) => {\n  const recentLinks = [];\n\n  props.posts.forEach((post) => {\n    recentLinks.push(\n      <li key={post.node.frontmatter.path}>\n        <StyledLink to={post.node.frontmatter.path}>{post.node.frontmatter.title}</StyledLink>\n      </li>,\n    );\n  });\n\n  return (\n    <Section style={{ textAlign: \"center\" }}>\n      <SectionHeader>Recent Posts</SectionHeader>\n      <RecentLinksList>{recentLinks}</RecentLinksList>\n    </Section>\n  );\n};\n\nRecentList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default RecentList;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport Section from \"./section\";\nimport SectionHeader from \"./sectionHeader\";\nimport UnbrokenStyledLink from \"./unbrokenStyledLink\";\n\nconst TagBody = styled.div`\n  width: 60%;\n  display: inline-block;\n\n  @media only screen and (max-width: 64em) {\n    width: 80%;\n  }\n`;\n\nconst TagSection = styled(Section)`\n  text-align: center !important;\n  padding-left: 0;\n  padding-right: 0;\n`;\n\nconst TagLink = styled(UnbrokenStyledLink)`\n  text-transform: capitalize;\n  margin-right: 10px;\n  margin-top: 5px;\n`;\n\nconst TagList = (props) => {\n  const tagLinks = [];\n  const { tagCount } = props;\n\n  Array.from(tagCount.entries()).forEach(([key, value]) => {\n    tagLinks.push(\n      <TagLink key={key} to={`/blog/tags/${key.toLowerCase().replace(/ /g, \"-\")}`}>\n        {`${key} (${value})`}\n      </TagLink>,\n    );\n  });\n\n  // special padding and width for taglist\n  return (\n    <TagSection>\n      <SectionHeader>Tags</SectionHeader>\n      <TagBody>{tagLinks}</TagBody>\n    </TagSection>\n  );\n};\n\nTagList.propTypes = {\n  tagCount: PropTypes.instanceOf(Map).isRequired,\n};\n\nexport default TagList;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql } from \"gatsby\";\n\nimport Archive from \"../components/archive\";\nimport Clear from \"../components/clear\";\nimport Pagination from \"../components/pagination\";\nimport PostList from \"../components/postList\";\nimport RecentList from \"../components/recentList\";\nimport TagList from \"../components/tagList\";\nimport colors from \"../utils/colors\";\n\nconst getTagName = (pathPrefix) => {\n  const tokens = pathPrefix.split(\"/\");\n  return tokens[tokens.length - 1].replace(/-/g, \" \");\n};\n\nconst BlogBody = styled.div`\n  margin-bottom: 60px;\n`;\n\nconst BlogLeftColumn = styled.div`\n  display: inline-block;\n  width: 60%;\n  float: left;\n  padding: 20px 20px 0 0;\n  box-sizing: border-box;\n  margin-bottom: -25px;\n\n  @media only screen and (max-width: 52em) {\n    width: 100%;\n    padding: 20px 0 0 0;\n    margin-bottom: 0;\n  }\n`;\n\nconst BlogRightColumn = styled.div`\n  display: inline-block;\n  width: 40%;\n  float: right;\n  padding: 20px 0 0 20px;\n  box-sizing: border-box;\n  margin-bottom: -25px;\n\n  @media only screen and (max-width: 52em) {\n    width: 100%;\n    padding: 0 0 0 0;\n  }\n`;\n\nconst TagListTitle = styled.h1`\n  text-transform: uppercase;\n  text-align: center;\n  font-weight: normal;\n  color: ${colors.base1()};\n  margin-top: 8px;\n`;\n\nclass BlogPage extends React.Component {\n  componentDidMount() {\n    this.node.style.opacity = 0;\n    window.requestAnimationFrame(() => {\n      this.node.style.transition = \"opacity 1000ms ease-out\";\n      this.node.style.opacity = 1;\n    });\n  }\n\n  render() {\n    const {\n      pageContext,\n      data: {\n        pagePosts: { edges: pagePosts },\n        allPosts: { edges: posts },\n      },\n    } = this.props;\n    const tagCount = new Map();\n    posts.forEach((post) => {\n      post.node.frontmatter.tags.forEach((tag) => {\n        if (!tagCount.has(tag)) {\n          tagCount.set(tag, 0);\n        }\n        tagCount.set(tag, tagCount.get(tag) + 1);\n      });\n    });\n\n    return (\n      <BlogBody\n        ref={(node) => {\n          this.node = node;\n        }}\n      >\n        <Helmet>\n          <title>Blog - Jeffrey Xiao</title>\n        </Helmet>\n        {pageContext.pathPrefix.match(/^\\/blog\\/tags\\//) && (\n          <TagListTitle>{`Posts tagged with “${getTagName(pageContext.pathPrefix)}”`}</TagListTitle>\n        )}\n        <Pagination\n          page={pageContext.page}\n          numOfPages={pageContext.numOfPages}\n          pathPrefix={pageContext.pathPrefix}\n        />\n        <BlogLeftColumn>\n          <PostList posts={pagePosts} tagFilter=\"\" />\n        </BlogLeftColumn>\n        <BlogRightColumn>\n          <TagList tagCount={tagCount} />\n          {pageContext.pathPrefix.match(/^\\/blog\\/tags\\//) && (\n            <RecentList posts={posts.slice(0, Math.min(5, posts.length))} />\n          )}\n          <Archive posts={posts} />\n        </BlogRightColumn>\n        <Clear />\n        <Pagination\n          page={pageContext.page}\n          pathPrefix={pageContext.pathPrefix}\n          numOfPages={pageContext.numOfPages}\n        />\n      </BlogBody>\n    );\n  }\n}\n\nBlogPage.propTypes = {\n  pageContext: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    numOfPages: PropTypes.number.isRequired,\n    skip: PropTypes.number.isRequired,\n    limit: PropTypes.number.isRequired,\n    pathPrefix: PropTypes.string.isRequired,\n  }).isRequired,\n  data: PropTypes.shape({\n    pagePosts: PropTypes.object.isRequired,\n    allPosts: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nexport default BlogPage;\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!, $tags: [String]!) {\n    pagePosts: allMarkdownRemark(\n      sort: { fields: [frontmatter___date_created], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: { frontmatter: { tags: { in: $tags } } }\n    ) {\n      edges {\n        node {\n          ...postFields\n        }\n      }\n    }\n    allPosts: allMarkdownRemark(sort: { fields: [frontmatter___date_created], order: DESC }) {\n      edges {\n        node {\n          frontmatter {\n            tags\n            path\n            title\n            date_created\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nimport Link from \"./link\";\nimport colors from \"../utils/colors\";\n\nexport default styled(Link)`\n  text-decoration: underline;\n  color: ${colors.accent1()};\n  &:hover {\n    background-color: ${colors.accent1(0.1)};\n  }\n  padding-right: 2px;\n  transition: all 0.5s;\n  font-family: \"Open Sans\", sans-serif;\n  font-weight: lighter;\n  font-size: 17px;\n`;\n","import styled from \"styled-components\";\n\nconst Clear = styled.div`\n  clear: both;\n`;\n\nexport default Clear;\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import styled from \"styled-components\";\n\nimport colors from \"../utils/colors\";\n\nexport default styled.span`\n  a {\n    font-size: 11px;\n    letter-spacing: 1.5px;\n    text-decoration: none;\n    color: ${colors.accent1()};\n    font-family: \"Josefin Sans\", sans-serif;\n    font-weight: bold;\n  }\n\n  &:hover {\n    a {\n      color: white;\n    }\n    background-color: ${colors.accent1()};\n    border: 1px solid ${colors.accent1()};\n  }\n\n  display: inline-flex;\n  align-items: center;\n  padding: 5px 8px 0px 8px;\n  border: 1px solid ${colors.accent3()};\n  border-radius: 50px;\n  background-color: ${colors.accent3()};\n  margin-right: 5px;\n  margin-bottom: 7px;\n  transition: all 0.5s;\n  text-transform: uppercase;\n`;\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}