{"version":3,"sources":["webpack:///./src/pages/resume.js","webpack:///./src/components/styledLink.js","webpack:///./src/components/clear.js"],"names":["ResumeBody","styled","div","colors","accent1","base2","ResumeLeftColumn","ResumeRightColumn","BaseSpan","span","LeftHeaderSpan","LeftSubheaderSpan","accent2","RightHeaderSpan","base1","RightSubheaderSpan","base3","LeftSubsubheaderSpan","Description","ul","LinkIcon","FontAwesomeIcon","ResumeSectionWrapper","getPoints","points","map","point","key","dangerouslySetInnerHTML","__html","ResumeSection","props","descriptionPoints","description","leftHeader","rightHeader","leftSubheader","rightSubheader","EducationSection","entity","subEntity","locationTime","LinksSection","to","icon","AwardDate","p","AwardTitle","AwardsSection","awards","forEach","award","push","node","title","date","SectionHeader","h1","SectionSubheader","h2","ResumePage","componentDidMount","this","style","opacity","window","requestAnimationFrame","transition","render","experienceSections","projectSections","skillSections","educationSections","certifications","data","allCertificationEntriesJson","edges","entry","certificationName","interests","allInterestEntriesJson","interestName","allEducationEntriesJson","getEducationSectionComponent","allExperienceEntriesJson","location","time","getExperienceSectionComponent","allProjectEntriesJson","category","tags","getProjectSectionComponent","allSkillEntriesJson","marginTop","elements","join","ref","allAwardEntriesJson","React","Component","pageQuery","Link","Clear"],"mappings":"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","file":"component---src-pages-resume-js-d454f452fa1a98d04d03.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql } from \"gatsby\";\n\nimport Clear from \"../components/clear\";\nimport StyledLink from \"../components/styledLink\";\nimport colors from \"../utils/colors\";\n\nconst ResumeBody = styled.div`\n  a {\n    color: ${colors.accent1()};\n    transition: all 0.5s;\n    &:hover {\n      background-color: ${colors.accent1(0.1)};\n    }\n  }\n  p {\n    color: ${colors.base2()};\n  }\n  span.emphasis {\n    color: ${colors.accent1()};\n  }\n  margin-bottom: 25px;\n`;\n\nconst ResumeLeftColumn = styled.div`\n  display: inline-block;\n  box-sizing: border-box;\n  width: 60%;\n  float: left;\n  padding: 0 30px 30px 0;\n\n  @media only screen and (max-width: 56em) {\n    width: 100%;\n    padding: 0;\n  }\n`;\n\nconst ResumeRightColumn = styled.div`\n  display: inline-block;\n  box-sizing: border-box;\n  width: 40%;\n  float: right;\n  padding: 0 0 30px 30px;\n\n  @media only screen and (max-width: 56em) {\n    width: 100%;\n    padding: 0 0 30px 0;\n  }\n`;\n\nconst BaseSpan = styled.span`\n  font-family: \"Open Sans\", sans-serif;\n  display: inline-block;\n  margin-bottom: 4px;\n  @media only screen and (max-width: 32em) {\n    width: 100%;\n    margin-top: 0;\n  }\n`;\n\nconst LeftHeaderSpan = styled(BaseSpan)`\n  float: left;\n  color: ${colors.accent1()};\n`;\n\nconst LeftSubheaderSpan = styled(BaseSpan)`\n  float: left;\n  color: ${colors.accent2()} !important;\n`;\n\nconst RightHeaderSpan = styled(BaseSpan)`\n  float: right;\n  color: ${colors.base1()};\n`;\n\nconst RightSubheaderSpan = styled(BaseSpan)`\n  float: right;\n  color: ${colors.base3()};\n`;\n\nconst LeftSubsubheaderSpan = styled(RightHeaderSpan)`\n  float: left;\n`;\n\nconst Description = styled.ul`\n  margin: 4px 0 0 -14px;\n  font-family: \"Open Sans\", sans-serif;\n  list-style-type: none;\n  color: ${colors.base2()};\n\n  li:before {\n    content: \"â€“\";\n    position: absolute;\n    margin-left: -18px;\n  }\n`;\n\nconst LinkIcon = styled(FontAwesomeIcon)`\n  padding-right: 5px;\n  width: 20px !important;\n`;\n\nconst ResumeSectionWrapper = styled.div`\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\n// prettier-ignore\nconst getPoints = (points) => points\n  .map((point) => <li key={point} dangerouslySetInnerHTML={{ __html: point }} />);\n\nconst ResumeSection = (props) => {\n  const descriptionPoints = getPoints(props.description);\n\n  return (\n    <ResumeSectionWrapper>\n      <div>\n        <LeftHeaderSpan>{props.leftHeader}</LeftHeaderSpan>\n        <RightHeaderSpan>{props.rightHeader}</RightHeaderSpan>\n        <Clear />\n      </div>\n      <div>\n        <LeftSubheaderSpan dangerouslySetInnerHTML={{ __html: props.leftSubheader }} />\n        <RightSubheaderSpan>{props.rightSubheader}</RightSubheaderSpan>\n        <Clear />\n      </div>\n      <Description>{descriptionPoints}</Description>\n    </ResumeSectionWrapper>\n  );\n};\n\nResumeSection.propTypes = {\n  description: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  leftHeader: PropTypes.string.isRequired,\n  rightHeader: PropTypes.string.isRequired,\n  leftSubheader: PropTypes.string.isRequired,\n  rightSubheader: PropTypes.string.isRequired,\n};\n\nconst EducationSection = (props) => {\n  const descriptionPoints = getPoints(props.description);\n\n  return (\n    <div>\n      <div>\n        <LeftHeaderSpan>{props.entity}</LeftHeaderSpan>\n        <Clear />\n      </div>\n      <div>\n        <LeftSubheaderSpan dangerouslySetInnerHTML={{ __html: props.subEntity }} />\n        <Clear />\n      </div>\n      <div>\n        <LeftSubsubheaderSpan dangerouslySetInnerHTML={{ __html: props.locationTime }} />\n        <Clear />\n      </div>\n      <Description>{descriptionPoints}</Description>\n    </div>\n  );\n};\n\nEducationSection.propTypes = {\n  description: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  entity: PropTypes.string.isRequired,\n  subEntity: PropTypes.string.isRequired,\n  locationTime: PropTypes.string.isRequired,\n};\n\nconst getExperienceSectionComponent = (entry, key) => (\n  <ResumeSection\n    key={key}\n    leftHeader={entry.node.entity}\n    leftSubheader={entry.node.subEntity}\n    rightHeader={entry.node.location}\n    rightSubheader={entry.node.time}\n    description={entry.node.description}\n  />\n);\n\nconst getProjectSectionComponent = (entry, key) => (\n  <ResumeSection\n    key={key}\n    leftHeader={entry.node.entity}\n    leftSubheader={entry.node.subEntity}\n    rightHeader={entry.node.category}\n    rightSubheader={entry.node.tags}\n    description={entry.node.description}\n  />\n);\n\nconst getEducationSectionComponent = (entry, key) => (\n  <EducationSection\n    key={key}\n    entity={entry.node.entity}\n    subEntity={entry.node.subEntity}\n    locationTime={entry.node.locationTime}\n    description={entry.node.description}\n  />\n);\n\nconst LinksSection = () => (\n  <div>\n    <div>\n      <StyledLink to=\"mailto:jeffrey.xiao@uwaterloo.ca\">\n        <LinkIcon icon=\"envelope\" />\n        jeffrey.xiao@waterloo.ca\n      </StyledLink>\n    </div>\n    <div>\n      <StyledLink to=\"https://www.github.com/jeffrey-xiao\">\n        <LinkIcon icon={[\"fab\", \"github\"]} />\n        github.com/jeffrey-xiao\n      </StyledLink>\n    </div>\n    <div>\n      <StyledLink to=\"https://www.linkedin.com/in/jeffreyxiao\">\n        <LinkIcon icon={[\"fab\", \"linkedin\"]} />\n        linkedin.com/in/jeffreyxiao\n      </StyledLink>\n    </div>\n    <div>\n      <StyledLink to=\"https://devpost.com/jeffreyxiao\">\n        <LinkIcon icon=\"link\" />\n        devpost.com/jeffreyxiao\n      </StyledLink>\n    </div>\n    <div>\n      <StyledLink to=\"https://s3.amazonaws.com/jeffreyxiao-resume/resume.pdf\">\n        <LinkIcon icon=\"file-pdf\" />\n        PDF Version of Resume\n      </StyledLink>\n    </div>\n  </div>\n);\n\nconst AwardDate = styled.p`\n  display: inline-block;\n  width: 40px;\n  vertical-align: top;\n  padding-right: 20px;\n  font-family: \"Open Sans\", sans-serif;\n  margin: 4px 0;\n  color: ${colors.base1()};\n`;\n\nconst AwardTitle = styled.p`\n  display: inline-block;\n  width: calc(100% - 60px);\n  font-family: \"Open Sans\", sans-serif;\n  margin: 4px 0;\n  color: ${colors.base1()};\n`;\n\nconst AwardsSection = (props) => {\n  const awards = [];\n\n  props.awards.forEach((award) => {\n    awards.push(\n      <div key={award.node.title}>\n        <AwardDate>{award.node.date}</AwardDate>\n        <AwardTitle>{award.node.title}</AwardTitle>\n      </div>,\n    );\n  });\n\n  return <div>{awards}</div>;\n};\n\nAwardsSection.propTypes = {\n  awards: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        date: PropTypes.number.isRequired,\n      }).isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nconst SectionHeader = styled.h1`\n  margin-top: 30px;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  color: ${colors.base1()};\n`;\n\nconst SectionSubheader = styled.h2`\n  margin-top: 12px;\n  color: ${colors.accent2()};\n  margin-bottom: 0;\n  font-weight: normal;\n  text-transform: uppercase;\n  font-size: 20px;\n`;\n\nclass ResumePage extends React.Component {\n  componentDidMount() {\n    this.node.style.opacity = 0;\n    window.requestAnimationFrame(() => {\n      this.node.style.transition = \"opacity 1000ms ease-out\";\n      this.node.style.opacity = 1;\n    });\n  }\n\n  render() {\n    const experienceSections = [];\n    const projectSections = [];\n    const skillSections = [];\n    const educationSections = [];\n    const certifications = getPoints(\n      this.props.data.allCertificationEntriesJson.edges.map(\n        (entry) => entry.node.certificationName,\n      ),\n    );\n    const interests = getPoints(\n      this.props.data.allInterestEntriesJson.edges.map((entry) => entry.node.interestName),\n    );\n\n    this.props.data.allEducationEntriesJson.edges.forEach((entry) => {\n      educationSections.push(getEducationSectionComponent(entry, entry.node.entity));\n    });\n\n    this.props.data.allExperienceEntriesJson.edges.forEach((entry) => {\n      experienceSections.push(getExperienceSectionComponent(entry, entry.node.entity));\n    });\n\n    this.props.data.allProjectEntriesJson.edges.forEach((entry) => {\n      projectSections.push(getProjectSectionComponent(entry, entry.node.entity));\n    });\n\n    this.props.data.allSkillEntriesJson.edges.forEach((entry) => {\n      skillSections.push(\n        <div key={entry.node.title}>\n          <SectionSubheader>{entry.node.title}</SectionSubheader>\n          <p\n            style={{ marginTop: \"0\" }}\n            dangerouslySetInnerHTML={{ __html: entry.node.elements.join(\", \") }}\n          />\n        </div>,\n      );\n    });\n\n    return (\n      <ResumeBody\n        ref={(node) => {\n          this.node = node;\n        }}\n      >\n        <Helmet>\n          <title>Resume - Jeffrey Xiao</title>\n        </Helmet>\n        <ResumeLeftColumn>\n          <SectionHeader>Experience</SectionHeader>\n          <div>{experienceSections}</div>\n          <SectionHeader>Projects</SectionHeader>\n          <div>{projectSections}</div>\n        </ResumeLeftColumn>\n        <ResumeRightColumn>\n          <SectionHeader>Links</SectionHeader>\n          <LinksSection />\n          <SectionHeader>Skills</SectionHeader>\n          {skillSections}\n          <SectionHeader>Awards</SectionHeader>\n          <AwardsSection awards={this.props.data.allAwardEntriesJson.edges} />\n          <SectionHeader>Certifications</SectionHeader>\n          <Description>{certifications}</Description>\n          <SectionHeader>Education</SectionHeader>\n          {educationSections}\n          <SectionHeader>Interests</SectionHeader>\n          <Description>{interests}</Description>\n        </ResumeRightColumn>\n        <Clear />\n      </ResumeBody>\n    );\n  }\n}\n\nResumePage.propTypes = {\n  data: PropTypes.shape({\n    allAwardEntriesJson: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n    }).isRequired,\n    allCertificationEntriesJson: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n    }).isRequired,\n    allInterestEntriesJson: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n    }).isRequired,\n    allEducationEntriesJson: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n    }).isRequired,\n    allExperienceEntriesJson: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n    }).isRequired,\n    allProjectEntriesJson: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n    }).isRequired,\n    allSkillEntriesJson: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default ResumePage;\nexport const pageQuery = graphql`\n  {\n    allExperienceEntriesJson {\n      edges {\n        node {\n          entity\n          subEntity\n          location\n          time\n          description\n        }\n      }\n    }\n\n    allProjectEntriesJson {\n      edges {\n        node {\n          entity\n          subEntity\n          category\n          tags\n          description\n        }\n      }\n    }\n\n    allSkillEntriesJson {\n      edges {\n        node {\n          title\n          elements\n        }\n      }\n    }\n\n    allAwardEntriesJson {\n      edges {\n        node {\n          date\n          title\n        }\n      }\n    }\n\n    allCertificationEntriesJson {\n      edges {\n        node {\n          certificationName\n        }\n      }\n    }\n\n    allEducationEntriesJson {\n      edges {\n        node {\n          entity\n          subEntity\n          locationTime\n          description\n        }\n      }\n    }\n\n    allInterestEntriesJson {\n      edges {\n        node {\n          interestName\n        }\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nimport Link from \"./link\";\nimport colors from \"../utils/colors\";\n\nexport default styled(Link)`\n  text-decoration: underline;\n  color: ${colors.accent1()};\n  &:hover {\n    background-color: ${colors.accent1(0.1)};\n  }\n  padding-right: 2px;\n  transition: all 0.5s;\n  font-family: \"Open Sans\", sans-serif;\n  font-weight: lighter;\n  font-size: 17px;\n`;\n","import styled from \"styled-components\";\n\nconst Clear = styled.div`\n  clear: both;\n`;\n\nexport default Clear;\n"],"sourceRoot":""}